<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearchBill.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKoAAABECAYAAAAROK5wAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAQvSURBVHhe7d27ixRLGMZh/wkzQzMzQzMzQzMTMREMBAPB
        RDAQzDQShJMJwgFFEBRBUETwgqKoiB5B4YA3vOCuc+3bznTP57y1O+vOTs06s7rT1ezvgyfrYQb23eqq
        6uqqLY1Gw4DQEVRUAkFFJRBUVAJBRSUQVFTCHwe11WpZkiSWZZn9SLp9ubUXekZt3tLfXzlQHpSLNE1d
        Tnz5mdS6gqovjdPMmllh82nPLv1f2OkXhR24k9vem13beaVrWy90sEnp768c7Lvddbk4919hX+KeC3Aj
        WbB2u+3N1VqmCmqz2bRavODCeepZbruuEkhMTgE+9ii3t/XCtbbTtLITB7UZZ1bLenb8ce79EcA0dPdV
        g1fv58qXt9V+G1S1onNx186+ym3bv/4vBdbr5NPcvse5y5kvfwNrBlVN89cot4N3aUWxcfbc6NrndrFm
        33VsUBXSb3Fhu6/TD8XGU/9VfddxYfUGVc3wt6hgsISZ2nG5Yx/7LatvkOUN6ly/z7D/DiHF7OkOPpfk
        I5kcCWotyuzMC/qkKM/h+7nN9wfwK3M5FFQ3T5r1GN2jdO9bw/3VoaDORx07+pDWFOXTky09hh0JqtKr
        FPs+BJTh3pfC4jgeDmorWbATT2hNEQ6tFdCj1qGgasEAi0kQEo2V0rz3K6iat9LqFt/FQJlufVq8/bug
        ar3g+Tfc9hGeIw9yqyedpVt/v3+q5Ve+C4EyDUb/LqjqsKrj6rsQKJPGTRo/uaDWUxafIEwaUHULWwxq
        1h9Zbb/ovxAom8oFVeW7AAiBiqAieCqCiuCpCCqCpyKoCJ6KoCJ4KoKK4KkIKoKnIqgInoqgIngqgorg
        qQgqgqciqAieiqAieCqCiuCpXFC1MJXdURCq5aBqL3527kOoloOql6f0EpXvIqBMw+9MJYuvpfouBMqk
        3ahr6dJbqDoLSMes+C4EyjTY1scFNYoiezlPUBEenWGmA/dcUF1YO7yJivDoiB9tObUc1FrcsUOcfoKA
        DPqnyudyULURlfaj9H0AKMOFt4W143Q4qMKOKQiFTkhp6uzUpWwOBVW7TuusH98HgVlaudv0SFBFUwE6
        p9L3YWAWdFfX3X1lLkeCqpNRvicFu0+jFJp5+hyNHoo2ElTRRe9aBdNVmCktjHo+V7h5/dWZ9AZV6q3I
        fYiwYhYU0hsfcvvRTrx5HBtUpx27wRXdAGwkNYZqFMeFVNYOap9mAtRnZXUVNoIGTuqT+m73K/02qKIB
        lpYCasqAdav4GzRPeu1d4Ub3vtOkV5soqAOa19Iia30BDwawHmro/nmdu8l8LTbx5cxnqqAO6Av0n6Av
        0+oWLcXSc1nfD8PmpgZN3UYdD6WzzNTQDR6LTmNdQR1Ql0Ch1UMCLR6gqNWlBk3dRp1lNsktfpw/Ciow
        KwQVlUBQUQkEFZVAUFEBDfsJK+ddInjdY1wAAAAASUVORK5CYII=
</value>
  </data>
</root>